%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: Transform Euler to RotationMatrix
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor\n// Available at the Unity
    Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=18935\n146;152;1697;900;1361.607;441.8442;1;True;False\nNode;AmplifyShaderEditor.FunctionInput;5;-896,0;Inherit;False;EulerAngles;3;0;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionNode;8;-640,0;Inherit;False;Transform
    Euler to Quaternion;-1;;2;42c41a33e379b0e409bba92cc6f1b338;0;1;2;FLOAT3;0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.FunctionSwitch;12;-256,0;Inherit;False;Matrix
    Space;False;0;2;-1;Row;Cell;Object;-1;9;0;FLOAT3x3;0,0,0,0,0,1,1,0,1;False;1;FLOAT3x3;0,0,0,0,0,1,1,0,1;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;1;FLOAT3x3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;11;-384,128;Inherit;False;float
    q0p = _quat.w * _quat.w@$float q1p = _quat.x * _quat.x@$float q2p = _quat.y *
    _quat.y@$float q3p = _quat.z * _quat.z@$float q0q1 = _quat.w * _quat.x@$float
    q0q2 = _quat.w * _quat.y@$float q0q3 = _quat.w * _quat.z@$float q1q2 = _quat.x
    * _quat.y@$float q1q3 = _quat.x * _quat.z@$float q2q3 = _quat.y * _quat.z@$   
    $float3x3 RotMatrix@$    $RotMatrix._11 = q0p + q1p - q2p - q3p@$RotMatrix._12
    = 2 * (q1q2 - q0q3)@$RotMatrix._13 = 2 * (q1q3 + q0q2)@$   $RotMatrix._21 = 2
    * (q1q2 + q0q3)@$RotMatrix._22 = q0p - q1p + q2p - q3p@$RotMatrix._23 = 2 * (q2q3
    - q0q1)@$    $RotMatrix._31 = 2 * (q1q3 - q0q2)@$RotMatrix._32 = 2 * (q2q3 +
    q0q1)@$RotMatrix._33 = q0p - q1p - q2p + q3p@$    $return RotMatrix@;5;Create;1;True;_quat;FLOAT4;0,0,0,0;In;;Inherit;False;Quat2RotMatCell;True;False;0;;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT3x3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;10;-384,-128;Inherit;False;float
    q0p = _quat.w * _quat.w@$float q1p = _quat.x * _quat.x@$float q2p = _quat.y *
    _quat.y@$float q3p = _quat.z * _quat.z@$float q0q1 = _quat.w * _quat.x@$float
    q0q2 = _quat.w * _quat.y@$float q0q3 = _quat.w * _quat.z@$float q1q2 = _quat.x
    * _quat.y@$float q1q3 = _quat.x * _quat.z@$float q2q3 = _quat.y * _quat.z@$   
    $float3x3 RotMatrix@$    $RotMatrix._11 = q0p + q1p - q2p - q3p@$RotMatrix._21
    = 2 * (q1q2 - q0q3)@$RotMatrix._31 = 2 * (q1q3 + q0q2)@$   $RotMatrix._12 = 2
    * (q1q2 + q0q3)@$RotMatrix._22 = q0p - q1p + q2p - q3p@$RotMatrix._32 = 2 * (q2q3
    - q0q1)@$    $RotMatrix._13 = 2 * (q1q3 - q0q2)@$RotMatrix._23 = 2 * (q2q3 +
    q0q1)@$RotMatrix._33 = q0p - q1p - q2p + q3p@$    $return RotMatrix@;5;Create;1;True;_quat;FLOAT4;0,0,0,0;In;;Inherit;False;Quat2RotMatRow;True;False;0;;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT3x3;0\nNode;AmplifyShaderEditor.FunctionOutput;0;128,0;Inherit;False;True;-1;mat;0;False;1;0;FLOAT3x3;0,0,0,0,1,1,1,0,1;False;1;FLOAT3x3;0\nWireConnection;8;2;5;0\nWireConnection;12;0;10;0\nWireConnection;12;1;11;0\nWireConnection;11;0;8;0\nWireConnection;10;0;8;0\nWireConnection;0;0;12;0\nASEEND*/\n//CHKSM=80E9C8098EFA8F27160E269681A98C4D4582D98D"
  m_functionName: 
  m_description: 
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 3
  m_customNodeCategory: 
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
